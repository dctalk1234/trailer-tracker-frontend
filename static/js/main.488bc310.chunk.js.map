{"version":3,"sources":["About/About.js","Movie/Movie.js","CategoryList/CategoryList.js","OneCategory/OneCategory.js","UpdateCategory/UpdateCategory.js","NewCategory/NewCategory.js","App/App.js","serviceWorker.js","index.js"],"names":["About","className","href","Component","Movie","state","movieTitle","axios","get","this","props","match","params","title","then","res","console","log","data","setState","trailer","releaseYear","catch","error","movie","width","height","src","frameBorder","allow","allowFullScreen","CategoryList","listOfCategories","movieCats","map","item","key","to","OneCategory","movies","redirect","deleteCategory","bind","setRedirect","renderRedirect","delete","list","poster","onClick","UpdateCategory","updatedTitle","search","movieList","originalMovieList","searchedMovieList","setRedirectToHome","renderRedirectToHome","handleSubmit","handleChange","findMovie","addMovie","searchResults","searchTitle","addSearchedMovie","evt","preventDefault","put","headers","target","value","filteredMovie","filter","toLowerCase","includes","innerText","style","color","movieSelected","movieObject","find","foundMovie","foundTitle","Search","newMovieTitle","split","i","pop","join","newMovieObject","window","location","reload","movieTitles","onChange","type","placeholder","Title","Year","NewCategory","newTitle","post","App","cats","catList","film","path","exact","component","render","routerProps","showCategory","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.488bc310.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div>\n                <h2 className=\"homeheader\">Meet the developers:</h2>\n                <a href=\"https://nathanielstack.dev/\">\n                    <h3>Nathaniel Stack</h3></a>\n                <p></p>\n                <a href=\"https://www.linkedin.com/in/shamira-jones/\">\n                    <h3>Shamira Jones</h3></a>\n                <p>Shamira is a Graphic/ Web Designer, Full Stack Web Developer and Guitar player. She loves to turn complex concepts into clean, functional, beautiful realities.Her passion to create is motivated by her belief that part of truly living is to create. </p>\n                <a href=\"https://www.spiano.dev/\">\n                    <h3>Sarah Panaligan</h3></a>\n                <p>Sarah is a full stack software engineer with a relentless work ethic and an exceptional ability to adapt to new environments. She is a self-disciplined, resourceful, and efficient programmer who has an eye for design so the final look of the product is as good as the code within the page. </p>\n                <a href=\"https://www.linkedin.com/in/jopara94/\">\n                    <h3>James Opara</h3></a>\n                <p>James is an energetic software engineer, foodie, music junkie, and self-proclaimed nerd of many disciplines. He's an outgoing, and detail-oriented person who thrives in a team environment, and is always excited to learn, grow and evolve.</p>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n//import movieList from './movieData';\nimport axios from \"axios\";\nimport \"./Movie.css\"\n\nexport default class Movie extends Component {\n    constructor() {\n        super();\n        this.state = {\n            movieTitle: \"\",\n        }\n    }\n\n    componentDidMount() {\n        axios.get(`https://trailerstracker.herokuapp.com/Movie/${this.props.match.params.title}`)\n\n            // axios.get(`http://localhost:8080/Movie/${this.props.match.params.title}`)\n            .then(res => {\n                console.log(res.data);\n                this.setState({\n                    title: res.data.title,\n                    trailer: res.data.trailer,\n                    releaseYear: res.data.releaseYear\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n    render() {\n        let movie = this.state;\n        console.log(this.state.title);\n        return (\n            <div >\n                <h3>{movie.title}</h3>\n                <h4>Released in: {movie.releaseYear}</h4>\n                <iframe\n                    className=\"movie\"\n                    title={movie.title}\n                    width=\"627\"\n                    height=\"470\"\n                    src={movie.trailer}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen>\n\n                </iframe>\n\n\n            </div>\n        );\n\n    }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import catList from \"./categoryData.json\";\nimport axios from \"axios\";\nimport \"../App/App.css\";\n\nclass CategoryList extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tlistOfCategories: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(\"https://trailerstracker.herokuapp.com/Category\")\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tthis.setState({ listOfCategories: res.data });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconsole.log(\"hello\");\n\t\tlet movieCats = this.state.listOfCategories.map(item => {\n\t\t\treturn (\n\t\t\t\t<div key={item.title}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<Link to={`/trailer-tracker-frontend/category/${item.title}`}>{item.title}</Link>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className=\"homeheader\">Browse Our Massive List Of Box Office Classics!</h2>\n\t\t\t\t{movieCats}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default CategoryList;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./OneCategory.css\";\nimport axios from \"axios\";\n\nexport default class OneCategory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      redirect: false\n    };\n    this.deleteCategory = this.deleteCategory.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n  deleteCategory() {\n    axios\n      .delete(`https://trailerstracker.herokuapp.com/Category/${this.props.match.params.title}`)\n      .then(res => {\n        this.setRedirect();\n        // this.setState({ movies: res.data.movies });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  setRedirect() {\n    this.setState({ redirect: true });\n  }\n\n  renderRedirect() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/trailer-tracker-frontend\" />;\n    }\n  }\n\n  componentDidMount() {\n    axios\n      .get(`https://trailerstracker.herokuapp.com/Category/${this.props.match.params.title}`)\n      .then(res => {\n        console.log(res.data.movies);\n\n        this.setState({ movies: res.data.movies });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    let list = this.state.movies.map(movie => {\n      return (\n        <div className=\"onePoster\">\n          <Link to={`/trailer-tracker-frontend/movie/${movie.title}`}>\n            <img className=\"poster\" src={movie.poster}></img>\n            <h6 className=\"posterName\">{movie.title}</h6>\n\n          </Link>\n        </div>\n      );\n    });\n    console.log(this.state.redirect);\n\n    return (\n      <div >\n        {this.renderRedirect()}\n        <h3 className=\"homeheader\">The Chosen Category is {this.props.match.params.title}</h3>\n        <div className=\"oneCatposterHolder\">\n\n          {list}\n        </div>\n\n\n        <button onClick={this.deleteCategory} className=\"deleteCategory\">\n          Delete This Category\n\t\t\t\t</button>\n\n        <Link to=\"/trailer-tracker-frontend\">\n          <button className=\"backtoHome\">Back To Home</button>\n        </Link>\n\n        <Link to={`/trailer-tracker-frontend/Category/update/${this.props.match.params.title}`}>\n          <button className=\"updatecat\">Update this Category </button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport './UpdateCategory.css';\n\nexport default class UpdateCategory extends Component {\n    constructor() {\n        super();\n        this.state = {\n            redirect: false,\n            // reload: false,\n            movies: [],\n            updatedTitle: '',\n            search: '',\n            movieList: [],\n            originalMovieList: [],\n            searchedMovieList: []\n        };\n        // this.setReload = this.setReload.bind(this);\n        // this.renderReload = this.renderReload.bind(this);\n        this.setRedirectToHome = this.setRedirectToHome.bind(this);\n        this.renderRedirectToHome = this.renderRedirectToHome.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.findMovie = this.findMovie.bind(this);\n        this.addMovie = this.addMovie.bind(this);\n        this.searchResults = this.searchResults.bind(this);\n        this.searchTitle = this.searchTitle.bind(this);\n        this.addSearchedMovie = this.addSearchedMovie.bind(this);\n    }\n    componentDidMount() {\n        axios.get(`https://trailerstracker.herokuapp.com/Category/${this.props.match.params.title}`)\n            .then(res => {\n                // console.log(...res.data.movies);\n                this.setState({\n                    movies: [...res.data.movies]\n                });\n            })\n            .then(() => {\n                axios.get(`https://trailerstracker.herokuapp.com/Movie`)\n                    .then(res => {\n                        this.setState({\n                            originalMovieList: [...res.data]\n                        })\n                    })\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n    setRedirectToHome() {\n        this.setState({ redirect: true });\n    }\n\n    renderRedirectToHome() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/trailer-tracker-frontend\" />;\n        }\n    }\n    // setReload() {\n    //     this.setState({reload: true});\n    // }\n\n    // renderReload() {\n    //     if (this.state.reload) {\n    //         return <Redirect to={`/trailer-tracker-frontend/Category/update/${this.props.match.params.title}`} />;\n    //     }\n    // }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        let updatedTitle = this.state.updatedTitle || this.props.match.params.title;\n        axios.put(\n            `https://trailerstracker.herokuapp.com/Category/${this.props.match.params.title}`,\n            { title: updatedTitle,\n                movies: this.state.movies\n            },\n            { headers: { 'Content-Type': 'application/json' }\n            })\n            .then(res => {\n                console.log(res);\n                this.setRedirectToHome();\n            })\n    }\n    handleChange(evt) {\n        evt.preventDefault();\n        if (evt.target.value !== '') {\n            this.setState({updatedTitle: evt.target.value});\n            // console.log(this.state.updatedTitle);\n        }\n    }\n    findMovie(evt) {\n        this.setState({ search: evt.target.value });\n        //console.log(evt.target.value);\n        let filteredMovie = this.state.originalMovieList.filter(\n            (movieTitle) => movieTitle.title.toLowerCase().includes(evt.target.value.toLowerCase()));\n        this.setState({ movieList: filteredMovie });\n        console.log(filteredMovie);\n    }\n    addMovie(evt) {\n        evt.preventDefault();\n        console.log(evt.target.innerText);\n        evt.target.style.color = '#F25A38';\n        let movieSelected = evt.target.innerText;\n        let movieObject = this.state.movieList.find((movie) => {\n            return movie.title === movieSelected;\n        });\n        this.setState({\n            movies: [...this.state.movies, movieObject]\n        });\n        console.log(movieObject);\n    }\n    searchResults(evt) {\n        evt.preventDefault();\n        let foundMovie = this.state.foundTitle;\n        axios.get(`https://trailerstracker.herokuapp.com/Movie/search/${foundMovie}`,\n            { title: foundMovie},\n            { headers: { 'Content-Type': 'application/json' } })\n            .then(res => {\n                this.setState({searchedMovieList: res.data.Search} );\n                // console.log(res.data.Search);\n            });\n    }\n    searchTitle(evt) {\n        console.log(evt.target.value);\n        evt.preventDefault();\n        this.setState({ foundTitle: evt.target.value });\n        console.log(this.state.foundTitle);\n    }\n    addSearchedMovie(evt) {\n        evt.preventDefault(evt);\n        console.log(evt.target.innerText);\n        evt.target.style.color = '#F25A38';\n        let newMovieTitle = evt.target.innerText;\n        newMovieTitle = newMovieTitle.split(\"\");\n        for (let i = 0; i < 5; i++) {\n            newMovieTitle.pop();\n        }\n        newMovieTitle = newMovieTitle.join(\"\");\n        console.log(newMovieTitle);\n        let newMovieObject = this.state.searchedMovieList;\n        console.log(newMovieObject);\n        axios.get(`https://trailerstracker.herokuapp.com/Movie/new/${newMovieTitle}`)\n            .then(res => {\n                // this.setState({movies: [...this.state.movies] } );\n                // this.setReload();\n                window.location.reload();\n                // console.log(newMovieObject);\n                // console.log(res);\n            })\n    }\n    render() {\n// console.log(this.state.originalMovieList);\n// console.log(this.state.movieList);\n//console.log(this.state.movies);\n        let movieTitles = this.state.movies.map(item => {\n            return (\n                <div key={item.title}>\n                    <ul>\n                        {item.title}\n                    </ul>\n                </div>\n            );\n        });\n//console.log(movieTitles);\n        return (\n            <div>\n                {/* {this.renderReload()} */}\n                {this.renderRedirectToHome()}\n                <section className=\"currentMovies\">\n                <h2 className=\"homeheader \">{this.props.match.params.title}</h2>\n                <h3>Current Movie Titles in {this.props.match.params.title}</h3>\n                {movieTitles}\n\n                <form className=\"currentMovies\">\n                    <label>Change Category Name <input onChange={this.handleChange} type=\"text\" placeholder={this.props.match.params.title} value={this.state.updatedTitle} /> </label>\n                    <button onClick={this.handleSubmit} type=\"submit\">Submit</button>\n                </form>\n\n                </section>\n                <form className=\"movieDBSearch\">\n                    <h4>Search through the movie selections and then click on the title you want to add.</h4>\n                    <label>Movie Selections <input onChange={this.findMovie} type=\"text\" placeholder=\"type movie title\" value={this.state.search} /> </label>\n\n                    <div>\n                        <ul >\n\n                            { this.state.movieList.map((movieTitle) => {\n\n                                return <li  onClick={this.addMovie} className=\"catmovie\" key={movieTitle.title}>{movieTitle.title}</li>;\n                            })}\n\n                        </ul>\n                    </div>\n                </form>\n                <form className=\"OMBDSearch\">\n                    <h4>Didn't find the movie you were looking for? </h4>\n                    <h4>Type the complete title into the field below to search a larger database, select the movie, and it will be added to our database inside the orange box above.</h4>\n                    <label> Search Movies <input onChange={this.searchTitle} type=\"text\" placeholder=\"type movie title\" /></label>\n                    <button onClick={this.searchResults} type=\"submit\">Submit</button>\n                    <div>\n                        <ul >\n                            { this.state.searchedMovieList.map((movieTitle) => {\n\n                                return <li  onClick={this.addSearchedMovie} className=\"catmovie\" key={movieTitle.Title}>{movieTitle.Title} {movieTitle.Year}</li>;\n                            })}\n                                 {/*<li  onClick={this.addSearchedMovie} className=\"catmovie\" >{this.state.searchedMovieList.Title} {this.state.searchedMovieList.Year}</li>*/}\n                        </ul>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport \"../NewCategory/NewCategory.css\";\n\nimport { Redirect } from \"react-router-dom\";\n\n\nexport default class NewCategory extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setRedirect = this.setRedirect.bind(this);\n        this.renderRedirect = this.renderRedirect.bind(this);\n    }\n    setRedirect() {\n        this.setState({ redirect: true });\n    }\n\n    renderRedirect() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/trailer-tracker-frontend\" />;\n        }\n    }\n    handleSubmit(evt) {\n        evt.preventDefault();\n        let newTitle = this.state.title;\n        axios.post(\n            `https://trailerstracker.herokuapp.com/Category/`,\n            { title: newTitle },\n            { headers: { 'Content-Type': 'application/json' } }\n        )\n            .then(res => {\n                console.log(res);\n                this.setRedirect();\n            })\n\n    }\n    handleChange(evt) {\n        evt.preventDefault();\n        this.setState({ title: evt.target.value });\n        console.log(this.state.title);\n    }\n    render() {\n\n        return (\n            <div>\n                {this.renderRedirect()}\n                <form>\n                    <label>Category <input onChange={this.handleChange} type=\"text\" placeholder=\"type category name\" value={this.state.title} /> </label>\n                    <button onClick={this.handleSubmit} type=\"submit\">Submit</button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// import \"../index.css\";\n\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport About from \"../About/About\";\nimport Movie from \"../Movie/Movie\";\nimport CategoryList from \"../CategoryList/CategoryList\";\nimport OneCategory from \"../OneCategory/OneCategory\";\nimport catList from \"../CategoryList/categoryData.json\";\nimport UpdateCategory from \"../UpdateCategory/UpdateCategory\";\nimport NewCategory from \"../NewCategory/NewCategory\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cats: catList\n        };\n    }\n    showCategory(film) {\n        this.setState({\n            title: film,\n            trailer: film\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App container\">\n                <header>\n                    <ul className=\"nav\">\n                        <Link to=\"/trailer-tracker-frontend\">\n                            <li className=\"nav-item\">Home</li>\n                        </Link>\n                        <Link to=\"/trailer-tracker-frontend/about\">\n                            <li className=\"nav-item\">About</li>\n                        </Link>\n                        <Link to=\"/trailer-tracker-frontend/new\">\n                            <li className=\"nav-item\"> New Category</li>\n                        </Link>\n\n                    </ul>\n                </header>\n                <main>\n                    <Switch><Route path=\"/trailer-tracker-frontend\" exact={true} component={CategoryList} />\n                        <Route path=\"/trailer-tracker-frontend/new\" exact={true} component={NewCategory} />\n                        <Route path=\"/trailer-tracker-frontend/about\" exact={true} component={About} />\n                        <Route path=\"/trailer-tracker-frontend/movie/:title\" exact={true} render={routerProps => <Movie film={this.showCategory} match={routerProps.match} />} />\n                        <Route path=\"/trailer-tracker-frontend/category/:title\" exact={true} render={routerProps => <OneCategory match={routerProps.match} />} />\n                        <Route path=\"/trailer-tracker-frontend/category/update/:title\" exact={true} render={routerProps => <UpdateCategory match={routerProps.match} />} />\n                    </Switch>\n                </main>\n\n\n            </div>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n    <App />\n</Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}